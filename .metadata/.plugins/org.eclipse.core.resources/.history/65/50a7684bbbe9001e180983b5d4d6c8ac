package org.xtext.fetaml.extensions

import org.xtext.fetaml.fetaml.SystemNodeReference
import org.xtext.fetaml.cpp.system.SystemInstance

class SystemNodeReferenceExtension {
	
	static def getSystemPath(SystemNodeReference ref) {
		// Should not return the NodeInstance.
		// E.g. x.y.z.nodeInstance
		// should return the system references in a list like so:
		// [x, y, z]
		
		// TODO this only returns the root system...
		// This creates false positives within the deployment validator!
		// This probably also makes the LaunchFileGeneration fail, due to wrong NodeIdentifier!
		// ... AnnouncerNodeOfSystemAnnouncerSystem
		
		// Basically, we only want the fully qualified name, not the system itself.
		// Maybe we can use fullyQualifiedNameProvider to get the full name?
		// Refactoring steps:
		// 	1. Return only a string rather than a list
		//  2. Try to construct the name
		
//		SystemInstance::fromFetaML(ref.fromSystem)
//			.findSystemInstanceForNodeInstance(ref.instance)
//			.fullyQualifiedNameParts

		return #[]
	}
}