/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.NodeInstance;
import org.xtext.example.mydsl.myDsl.NodeInstanceReference;
import org.xtext.example.mydsl.myDsl.SystemReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Node Instance Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.NodeInstanceReferenceImpl#getBelongingSystemReference <em>Belonging System Reference</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.NodeInstanceReferenceImpl#getNode <em>Node</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NodeInstanceReferenceImpl extends MinimalEObjectImpl.Container implements NodeInstanceReference
{
  /**
   * The cached value of the '{@link #getBelongingSystemReference() <em>Belonging System Reference</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBelongingSystemReference()
   * @generated
   * @ordered
   */
  protected SystemReference belongingSystemReference;

  /**
   * The cached value of the '{@link #getNode() <em>Node</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNode()
   * @generated
   * @ordered
   */
  protected NodeInstance node;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NodeInstanceReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.NODE_INSTANCE_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SystemReference getBelongingSystemReference()
  {
    return belongingSystemReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBelongingSystemReference(SystemReference newBelongingSystemReference, NotificationChain msgs)
  {
    SystemReference oldBelongingSystemReference = belongingSystemReference;
    belongingSystemReference = newBelongingSystemReference;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE, oldBelongingSystemReference, newBelongingSystemReference);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBelongingSystemReference(SystemReference newBelongingSystemReference)
  {
    if (newBelongingSystemReference != belongingSystemReference)
    {
      NotificationChain msgs = null;
      if (belongingSystemReference != null)
        msgs = ((InternalEObject)belongingSystemReference).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE, null, msgs);
      if (newBelongingSystemReference != null)
        msgs = ((InternalEObject)newBelongingSystemReference).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE, null, msgs);
      msgs = basicSetBelongingSystemReference(newBelongingSystemReference, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE, newBelongingSystemReference, newBelongingSystemReference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NodeInstance getNode()
  {
    if (node != null && node.eIsProxy())
    {
      InternalEObject oldNode = (InternalEObject)node;
      node = (NodeInstance)eResolveProxy(oldNode);
      if (node != oldNode)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.NODE_INSTANCE_REFERENCE__NODE, oldNode, node));
      }
    }
    return node;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NodeInstance basicGetNode()
  {
    return node;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNode(NodeInstance newNode)
  {
    NodeInstance oldNode = node;
    node = newNode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.NODE_INSTANCE_REFERENCE__NODE, oldNode, node));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE:
        return basicSetBelongingSystemReference(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE:
        return getBelongingSystemReference();
      case MyDslPackage.NODE_INSTANCE_REFERENCE__NODE:
        if (resolve) return getNode();
        return basicGetNode();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE:
        setBelongingSystemReference((SystemReference)newValue);
        return;
      case MyDslPackage.NODE_INSTANCE_REFERENCE__NODE:
        setNode((NodeInstance)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE:
        setBelongingSystemReference((SystemReference)null);
        return;
      case MyDslPackage.NODE_INSTANCE_REFERENCE__NODE:
        setNode((NodeInstance)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.NODE_INSTANCE_REFERENCE__BELONGING_SYSTEM_REFERENCE:
        return belongingSystemReference != null;
      case MyDslPackage.NODE_INSTANCE_REFERENCE__NODE:
        return node != null;
    }
    return super.eIsSet(featureID);
  }

} //NodeInstanceReferenceImpl
