/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.mydsl.scoping;

import com.google.common.base.Objects;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.xtext.example.mydsl.myDsl.DeploymentStatement;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.SubSystemReference;

@SuppressWarnings("all")
public class MyDslScopeProvider extends AbstractMyDslScopeProvider {
  @Override
  public IScope getScope(final EObject context, final EReference reference) {
    IScope _switchResult = null;
    boolean _matched = false;
    if (context instanceof SubSystemReference) {
      boolean _equals = Objects.equal(reference, MyDslPackage.Literals.SYSTEM_REFERENCE__SYSTEM);
      if (_equals) {
        _matched=true;
        _switchResult = this.getScopeForSubSystemReference_SubSystem(((SubSystemReference)context), reference);
      }
    }
    if (!_matched) {
      if (context instanceof DeploymentStatement) {
        boolean _equals = Objects.equal(reference, MyDslPackage.Literals.DEPLOYMENT_STATEMENT__NODE);
        if (_equals) {
          _matched=true;
          _switchResult = this.getScopeForDeploymentStatement_node(((DeploymentStatement)context), reference);
        }
      }
    }
    if (!_matched) {
      _switchResult = super.getScope(context, reference);
    }
    return _switchResult;
  }
  
  private IScope getScopeForSubSystemReference_SubSystem(final SubSystemReference subSysRef, final EReference reference) {
    return Scopes.scopeFor(subSysRef.getParent().getSystem().getType().getSubsystems());
  }
  
  private IScope getScopeForDeploymentStatement_node(final DeploymentStatement deployment, final EReference reference) {
    return Scopes.scopeFor(deployment.getSystem().getSystem().getType().getNodes());
  }
}
